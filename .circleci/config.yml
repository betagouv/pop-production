version: 2.1

commands:
  restore_node_modules:
    steps:
      - restore_cache:
          key: v1-dependencies-{{ checksum "yarn.lock" }}
  save_node_modules:
    steps:
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
  configure_aws_ebcli:
    steps:
      - run: sudo pip install awsebcli
      - run:
          name: AWS credentials
          command: |
            mkdir ~/.aws
            echo "[eb-cli]" > ~/.aws/credentials
            echo "aws_access_key_id=$AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
            echo "aws_secret_access_key=$AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials

jobs:
  prepare:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_node_modules
      - run: yarn install --frozen-lockfile
      - save_node_modules
  test:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_node_modules
      - run: yarn test
  build_staging:
    docker:
      - image: circleci/node:8.10
    working_directory: ~/repo
    steps:
      - checkout
      - restore_node_modules
      - run: yarn build:staging
      - persist_to_workspace:
          root: ~/repo
          paths:
              - build
  deploy_eb_staging:
    docker:
      - image: circleci/python:2.7-jessie
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - restore_node_modules
      - configure_aws_ebcli
      - run: eb deploy pop-production-staging

workflows:
  version: 2.1
  ci_cd:
    jobs:
      - prepare
      - test:
          requires:
            - prepare
      - build_staging:
          requires:
            - prepare
          filters:
            branches:
              only: master
      - deploy_eb_staging:
          requires:
            - prepare
            - test
            - build_staging
          filters:
            branches:
              only: master
